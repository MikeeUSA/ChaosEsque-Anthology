// COMMIT-TODO: Update if necessary before committing
// Revision 1: additional statistics sent (flag caps, returns, deaths)
// Revision 2: Mapvote preview pictures
// Revision 3: optimized map vote protocol
// Revision 4: CSQC config var system
// Revision 5: mapvote time fix
// Revision 6: more robust against packet loss/delays, also show not yet connected clients
// Revision 7: packet loss column
// Revision 8: race
// Revision 9: race delta
// Revision 10: scoreboard force
// Revision 11: scoreboard unforce; spectator support beginning
// Revision 12: smaller scores updates (SERVER: requires new engine)
// Revision 13: pointparticles
// Revision 14: laser
// Revision 15: zoom
// Revision 16: multi-weapons
// Revision 17: multi-weaponimpulses
// Revision 18: warmup
// Revision 19: fog
// Revision 20: naggers
// Revision 21: entcs for players optimized (position data down from 12 to 7 bytes); waypointsprites in csqc for team radar
// Revision 22: hook shot origin
#define CSQC_REVISION 22

const float AS_STRING		= 1;
const float AS_INT		= 2;
const float AS_FLOAT_TRUNCATED	= 2;
const float AS_FLOAT		= 8;

const float TE_CSQC_PICTURE = 100;
const float TE_CSQC_RACE = 101;
const float TE_CSQC_SPAWN = 102;
const float TE_CSQC_ZCURVEPARTICLES = 103;
const float TE_CSQC_NEXGUNBEAMPARTICLE = 104;
const float TE_CSQC_LIGHTNINGARC = 105;
const float TE_CSQC_TEAMNAGGER = 106;
const float TE_CSQC_PINGPLREPORT = 107;
const float TE_CSQC_ANNOUNCE = 110;
const float TE_CSQC_TARGET_MUSIC = 111;
const float TE_CSQC_KILLNOTIFY = 112;
const float TE_CSQC_KILLCENTERPRINT = 113;
const float TE_CSQC_CENTERPRINT_GENERIC = 114;
const float TE_CSQC_WEAPONCOMPLAIN = 115;
const float TE_CSQC_NEX_SCOPE = 116;
const float TE_CSQC_MINELAYER_MAXMINES = 117;
const float TE_CSQC_HAGAR_MAXROCKETS = 118;
const float TE_CSQC_VEHICLESETUP = 119;
const float TE_CSQC_SVNOTICE = 120;
const float TE_CSQC_FIREARC = 121;
const float TE_CSQC_LIGHTNINGARCB = 123;
const float TE_CSQC_LIGHTNINGARCC = 124;
const float TE_CSQC_LIGHTNINGARCD = 125;
const float TE_CSQC_LIGHTNINGARCP = 126;

const float RACE_NET_CHECKPOINT_HIT_QUALIFYING = 0; // byte checkpoint, short time, short recordtime, string recordholder
const float RACE_NET_CHECKPOINT_CLEAR = 1;
const float RACE_NET_CHECKPOINT_NEXT_QUALIFYING = 2; // byte nextcheckpoint, short recordtime, string recordholder
const float RACE_NET_CHECKPOINT_HIT_RACE = 3; // byte checkpoint, short delta, byte lapsdelta, string opponent
const float RACE_NET_CHECKPOINT_HIT_RACE_BY_OPPONENT = 4; // byte checkpoint, short delta, byte lapsdelta, string opponent
const float RACE_NET_CHECKPOINT_NEXT_SPEC_QUALIFYING = 5; // byte nextcheckpoint, float laptime, short recordtime, string recordholder
const float RACE_NET_PENALTY_RACE = 6; // byte penaltytime, string reason
const float RACE_NET_PENALTY_QUALIFYING = 7; // byte penaltytime, string reason
const float RACE_NET_SERVER_RECORD = 8; // server record, sent to client
const float RACE_NET_SPEED_AWARD = 9; // speed award, sent to client
const float RACE_NET_SPEED_AWARD_BEST = 10; // all time best speed award, sent to client
const float RACE_NET_SERVER_RANKINGS = 11;
const float RACE_NET_SERVER_STATUS = 12;
const float RANKINGS_CNT = 15;

const float ENT_CLIENT = 0;
const float ENT_CLIENT_DEAD = 1;
const float ENT_CLIENT_ENTCS = 2;
const float ENT_CLIENT_SCORES_INFO = 3;
const float ENT_CLIENT_SCORES = 4;
const float ENT_CLIENT_TEAMSCORES = 5;
const float ENT_CLIENT_POINTPARTICLES = 6;
const float ENT_CLIENT_RAINSNOW = 7;
const float ENT_CLIENT_LASER = 8;
const float ENT_CLIENT_NAGGER = 9; // flags [votecalledvote]
const float ENT_CLIENT_WAYPOINT = 10; // flags origin [team displayrule] [spritename] [spritename2] [spritename3] [lifetime maxdistance hideable]
const float ENT_CLIENT_RADARLINK = 11; // flags [startorigin] [endorigin] [startcolor+16*endcolor]
const float ENT_CLIENT_PROJECTILE = 12;
const float ENT_CLIENT_GIBSPLASH = 13;
const float ENT_CLIENT_DAMAGEINFO = 14;
const float ENT_CLIENT_CASING = 15;
const float ENT_CLIENT_INIT = 16;
const float ENT_CLIENT_MAPVOTE = 17;
const float ENT_CLIENT_CLIENTDATA = 18;
const float ENT_CLIENT_RANDOMSEED = 19;
const float ENT_CLIENT_WALL = 20;
const float ENT_CLIENT_SPIDERBOT = 21;
const float ENT_CLIENT_MODELEFFECT = 22;
const float ENT_CLIENT_TUBANOTE = 23;
const float ENT_CLIENT_WARPZONE = 24;
const float ENT_CLIENT_WARPZONE_CAMERA = 25;
const float ENT_CLIENT_TRIGGER_MUSIC = 26;
const float ENT_CLIENT_HOOK = 27;
const float ENT_CLIENT_LGBEAM = 28;
const float ENT_CLIENT_GAUNTLET = 29;
const float ENT_CLIENT_ACCURACY = 30;
const float ENT_CLIENT_SHOWNAMES = 31;
const float ENT_CLIENT_WARPZONE_TELEPORTED = 32;
const float ENT_CLIENT_MODEL = 33;
const float ENT_CLIENT_ITEM = 34;
const float ENT_CLIENT_BUMBLE_RAYGUN = 35;
const float ENT_CLIENT_MODELEFFECT2 = 36;
const float ENT_CLIENT_SMOKENADESPLASH = 37;
const float ENT_CLIENT_SHUNDI_RAYGUN = 38;
const float ENT_CLIENT_FLAMETHROWERBEAM = 39;
const float ENT_CLIENT_FROSTBEAM = 40;
const float ENT_CLIENT_POISONBEAM = 41;

const float ENT_CLIENT_TURRET = 45;
const float ENT_CLIENT_AUXILIARYXHAIR = 50;
const float ENT_CLIENT_VEHICLE = 60;

const float SPRITERULE_DEFAULT = 0;
const float SPRITERULE_TEAMPLAY = 1;

const float RADARICON_NONE = 0;
const float RADARICON_FLAG = 1;
const float RADARICON_FLAGCARRIER = 1;
const float RADARICON_HERE = 1; // TODO make these 3 and 4, and make images for them
const float RADARICON_DANGER = 1;
const float RADARICON_WAYPOINT = 1;
const float RADARICON_HELPME = 1;
const float RADARICON_CONTROLPOINT = 1;
const float RADARICON_GENERATOR = 1;
const float RADARICON_OBJECTIVE = 1;
const float RADARICON_DOMPOINT = 1;
const float RADARICON_POWERUP = 1;
const float RADARICON_TAGGED = 1;

///////////////////////////
// keys pressed
const float KEY_FORWARD		=	1;
const float KEY_BACKWARD	=	2;
const float KEY_LEFT		=	4;
const float KEY_RIGHT		=	8;
const float KEY_JUMP		=	16;
const float KEY_CROUCH		=	32;
const float KEY_ATCK		=	64;
const float KEY_ATCK2		=	128;

///////////////////////////
// cvar constants

float CVAR_SAVE 	= 1;
float CVAR_NOTIFY 	= 2;
float CVAR_READONLY	= 4;

///////////////////////////
// csqc communication stuff

const float STAT_KH_KEYS = 32;
const float STAT_CTF_STATE = 33;
const float STAT_WEAPONS = 35;
const float STAT_SWITCHWEAPON = 36;
const float STAT_GAMESTARTTIME = 37;
const float STAT_STRENGTH_FINISHED = 38;
const float STAT_INVINCIBLE_FINISHED = 39;
const float STAT_PRESSED_KEYS = 42;
const float STAT_ALLOW_OLDNEXBEAM = 43; // this stat could later contain some other bits of info, like, more server-side particle config
const float STAT_FUEL = 44;
const float STAT_NB_METERSTART = 45;
const float STAT_SHOTORG = 46; // compressShotOrigin
const float STAT_LEADLIMIT = 47;
const float STAT_WEAPON_CLIPLOAD = 48;
const float STAT_WEAPON_CLIPSIZE = 49;
const float STAT_NEX_CHARGE = 50;
const float STAT_LAST_PICKUP = 51;
const float STAT_HUD = 52;
const float STAT_NEX_CHARGEPOOL = 53;
const float STAT_HIT_TIME = 54;
const float STAT_TYPEHIT_TIME = 55;
const float STAT_LAYED_MINES = 56;
const float STAT_HAGAR_LOAD = 57;
const float STAT_SWITCHINGWEAPON = 58;
const float STAT_SUPERWEAPONS_FINISHED = 59;

const float STAT_VEHICLESTAT_HEALTH  = 60;
const float STAT_VEHICLESTAT_SHIELD  = 61;
const float STAT_VEHICLESTAT_ENERGY  = 62;
const float STAT_VEHICLESTAT_AMMO1   = 63;
const float STAT_VEHICLESTAT_RELOAD1 = 64;
const float STAT_VEHICLESTAT_AMMO2   = 65;
const float STAT_VEHICLESTAT_RELOAD2 = 66;
const float STAT_VEHICLESTAT_AMMO1_CURRENT   = 67;
const float STAT_VEHICLESTAT_AMMO1_MAX       = 68;
const float STAT_VEHICLESTAT_AMMO2_CURRENT   = 69;
const float STAT_VEHICLESTAT_AMMO2_MAX       = 70;

const float STAT_SECRETS_TOTAL = 71;
const float STAT_SECRETS_FOUND = 72;
const float STAT_RESPAWN_TIME = 73;

const float STAT_WEAPONS2 = 75;

const float STAT_MANA = 77;

const float STAT_MONSTERS_TOTAL = 78;
const float STAT_MONSTERS_KILLED = 79;

const float STAT_HUDSHOWNAMESENEMIES = 80;
const float STAT_BLINDED = 81;
const float STAT_NUKEFLASH = 82;
const float STAT_BANGFLASH = 83;

const float STAT_WEAPONS3 = 84;

const float STAT_STONED = 85;

const float STAT_WEAPONS4 = 86;
const float STAT_WEAPONS5 = 87;
const float STAT_WEAPONS6 = 88;
const float STAT_FROZEN2 = 89; //Non-freezetag frozen
const float STAT_WEAPONS7 = 90;
const float STAT_WEAPONS8 = 91;
const float STAT_CLAIRVOYANCE = 92;  //If we are doing remote-viewing this frame
const float STAT_CLAIRVOYANCEX = 93; //XYZ coords: Note Feel free to Use whenever needing to
const float STAT_CLAIRVOYANCEY = 94; //Send a origin coord to the client
const float STAT_CLAIRVOYANCEZ = 95; //For remove viewing (see client/View.qc)
const float STAT_WEAPONS9 = 96;

// mod stats (1xx)
const float STAT_REDALIVE = 100;
const float STAT_BLUEALIVE = 101;
const float STAT_YELLOWALIVE = 102;
const float STAT_PINKALIVE = 103;

// freeze tag
const float STAT_FROZEN = 104;
const float STAT_REVIVE_PROGRESS = 105;

// domination
const float STAT_DOM_TOTAL_PPS = 100;
const float STAT_DOM_PPS_RED = 101;
const float STAT_DOM_PPS_BLUE = 102;
const float STAT_DOM_PPS_PINK = 103;
const float STAT_DOM_PPS_YELLOW = 104;

//const float STAT_SPIDERBOT_AIM     53 // compressShotOrigin
//const float STAT_SPIDERBOT_TARGET  54 // compressShotOrigin

//Continued regular stats
const float STAT_PLYRINFLTHLIQUID = 106;

// see DP source, quakedef.h
const float STAT_MOVEVARS_AIRSPEEDLIMIT_NONQW = 222;
const float STAT_MOVEVARS_AIRSTRAFEACCEL_QW = 223;
const float STAT_MOVEVARS_MAXSPEED = 244;
const float STAT_MOVEVARS_AIRACCEL_QW = 254;

const float CTF_STATE_ATTACK = 1;
const float CTF_STATE_DEFEND = 2;
const float CTF_STATE_COMMANDER = 3;

const float HUD_NORMAL = 0;
const float HUD_VEHICLE_FIRST   = 10;
const float HUD_SPIDERBOT       = 10;
const float HUD_WAKIZASHI       = 11;
const float HUD_RAPTOR          = 12;
const float HUD_BUMBLEBEE       = 13;
const float HUD_BUMBLEBEE_GUN   = 14;
const float HUD_TANK            = 15;
const float HUD_AEROPLANE       = 16;
const float HUD_VEHICLE_LAST    = 16;

const vector eX = '1 0 0';
const vector eY = '0 1 0';
const vector eZ = '0 0 1';

// moved that here so the client knows the max.
// # of maps, I'll use arrays for them :P
#define MAPVOTE_COUNT 10

/**
 * Lower scores are better (e.g. suicides)
 */
#define SFL_LOWER_IS_BETTER     1

/**
 * Don't show zero values as scores
 */
#define SFL_HIDE_ZERO           2

/**
 * Allow a column to be hidden (do not automatically add it even if it is a sorting key)
 */
#define SFL_ALLOW_HIDE         16

/**
 * Display as a rank (with st, nd, rd, th suffix)
 */
#define SFL_RANK               32

/**
 * Display as mm:ss.s, value is stored as 10ths of a second (AND 0 is the worst possible value!)
 */
#define SFL_TIME               64

// not an extra constant yet
#define SFL_ZERO_IS_WORST SFL_TIME

/**
 * Scoring priority (NOTE: PRIMARY is used for fraglimit)
 */
#define SFL_SORT_PRIO_SECONDARY 4
#define SFL_SORT_PRIO_PRIMARY   8
#define SFL_SORT_PRIO_MASK     12

/**
 * Score indices
 */
#define MAX_SCORE 10
#define MAX_TEAMSCORE 2

#define ST_SCORE 0
#define SP_KILLS 0
#define SP_DEATHS 1
#define SP_SUICIDES 2
#define SP_SCORE 3
// game mode specific indices are not in common/, but in server/scores_rules.qc!

#ifdef COMPAT_XON010_CHANNELS
float CH_INFO = 0; // only on world and csqc
float CH_TRIGGER = 0; // only on players; compat: FALSELY CONTROLLED BY "Info"
float CH_WEAPON_A = 1; // only on players and entities
float CH_WEAPON_SINGLE = 5; // only on players and entities
float CH_VOICE = 2; // only on players
float CH_BGM_SINGLE = 2; // only on csqc; compat: FALSELY CONTROLLED BY "Voice"
float CH_AMBIENT = 2; // only on csqc; compat: FALSELY CONTROLLED BY "Voice"
float CH_TRIGGER_SINGLE = 3; // only on players, entities, csqc
float CH_SHOTS = 4; // only on players, entities, csqc
float CH_SHOTS_SINGLE = 4; // only on players, entities, csqc
float CH_WEAPON_B = 5; // only on players and entities
float CH_PAIN = 6; // only on players and csqc
float CH_PAIN_SINGLE = 6; // only on players and csqc
float CH_PLAYER = 7; // only on players and entities
float CH_TUBA = 5; // only on csqc
#else
float CH_INFO = 0;
float CH_TRIGGER = -3;
float CH_WEAPON_A = -1;
float CH_WEAPON_SINGLE = 1;
float CH_VOICE = -2;
float CH_BGM_SINGLE = 8;
float CH_AMBIENT = -9;
float CH_TRIGGER_SINGLE = 3;
float CH_SHOTS = -4;
float CH_SHOTS_SINGLE = 4;
float CH_WEAPON_B = -1;
float CH_PAIN = -6;
float CH_PAIN_SINGLE = 6;
float CH_PLAYER = -7;
float CH_TUBA = 5;
#endif

float	ATTN_NONE				= 0;
float	ATTN_MIN				= 0.015625;
float	ATTN_NORM				= 0.5;
float	ATTN_LARGE				= 1;
float	ATTN_IDLE				= 2;
float	ATTN_STATIC				= 3;
float	ATTN_MAX   				= 3.984375;

#define VOL_BASE 0.7
#define VOL_BASEVOICE 1.0

// this sets sounds and other properties of the projectiles in csqc
float PROJECTILE_ELECTRO = 1;
float PROJECTILE_ROCKET = 2;
float PROJECTILE_TAG = 3;
float PROJECTILE_BULLET = 4;
float PROJECTILE_CRYLINK = 5;
float PROJECTILE_ELECTRO_BEAM = 6;
float PROJECTILE_GRENADE = 7;
float PROJECTILE_GRENADE_BOUNCING = 8;
float PROJECTILE_MINE = 9;
float PROJECTILE_LASER = 10;
float PROJECTILE_HLAC = 11;
float PROJECTILE_SEEKER = 12;
float PROJECTILE_FLAC = 13;
float PROJECTILE_PORTO_RED = 14;
float PROJECTILE_PORTO_BLUE = 15;
float PROJECTILE_HOOKBOMB = 16;
float PROJECTILE_HAGAR = 17;
float PROJECTILE_HAGAR_BOUNCING = 18;
float PROJECTILE_BULLET_GLOWING = 19;
float PROJECTILE_CRYLINK_BOUNCING = 20;
float PROJECTILE_FIREBALL = 21;
float PROJECTILE_FIREMINE = 22;
float PROJECTILE_BULLET_GLOWING_TRACER = 23;

float PROJECTILE_RAPTORCANNON   = 24;
float PROJECTILE_RAPTORBOMB     = 25;
float PROJECTILE_RAPTORBOMBLET  = 26;
float PROJECTILE_SPIDERROCKET   = 27;
float PROJECTILE_WAKIROCKET     = 28;
float PROJECTILE_WAKICANNON     = 29;
float PROJECTILE_CROSSBOWBOLT   = 30;
float PROJECTILE_BALLISTABOLT   = 31;
float PROJECTILE_CALTROP        = 32;
float PROJECTILE_DELUGE         = 33;
float PROJECTILE_ICEBALL        = 34;
float PROJECTILE_NUKEBOMB       = 35;
float PROJECTILE_BUMBLE_GUN     = 36;
float PROJECTILE_BUMBLE_BEAM    = 37;
float PROJECTILE_CHARBELCHER    = 38;
float PROJECTILE_NADE           = 39;
float PROJECTILE_NADE_BURN      = 40;
float PROJECTILE_BURNINGBOLT    = 41;
float PROJECTILE_RPG            = 42;
float PROJECTILE_ARROW   	= 43;
float PROJECTILE_BURNINGARROW   = 44;
float PROJECTILE_BRBALLISTABOLT = 45;
float PROJECTILE_ATMINE         = 46;
float PROJECTILE_RAPTORCMISSILE = 47;
float PROJECTILE_NUKECMISSILE   = 48;
float PROJECTILE_ROCK           = 49;
float PROJECTILE_ROCK_BOUNCING  = 50;
float PROJECTILE_SIEGECANNON    = 51;
float PROJECTILE_STARBLAST      = 52;
float PROJECTILE_STARBLAST_BOUNCING  = 53;
float PROJECTILE_MUSKETBALL     = 54;
float PROJECTILE_BULLETWEBLEY   = 55;
float PROJECTILE_BULLET45ACP    = 56;
float PROJECTILE_BULLET50AE     = 57;
float PROJECTILE_BULLETSHOTGUN  = 58;
float PROJECTILE_BULLET9MM      = 59;
float PROJECTILE_BULLET357MAG   = 59;
float PROJECTILE_BULLET44MAG    = 60;
float PROJECTILE_BULLETRIFLE22  = 61;
float PROJECTILE_BULLETRIFLE25  = 62;
float PROJECTILE_BULLETRIFLE9MM  = 63;
float PROJECTILE_BULLETRIFLE9MM_G = 64;
float PROJECTILE_BULLETRIFLE9MM_G_T = 65;
float PROJECTILE_BULLETRIFLE50  = 66;
float PROJECTILE_BULLETRIFLE50S  = 67;
float PROJECTILE_BULLETRIFLE50_G = 68;
float PROJECTILE_BULLETRIFLE50_G_T = 69;
float PROJECTILE_BULLETRIFLE17MM = 70;
float PROJECTILE_BULLETRIFLE20MM = 71;
float PROJECTILE_BULLETRIFLE30MM = 72;
float PROJECTILE_BALLBEARING     = 73;
float PROJECTILE_BULLETSHRAPNEL  = 74;
float PROJECTILE_BULLETSHRAPNELSHINE = 75;
float PROJECTILE_BULLETSHRAPNELDARK  = 76;
float PROJECTILE_BULLETSHRAPNELHOT  = 77;
float PROJECTILE_BULLETNAGANT    = 78;
float PROJECTILE_MORTARGRENADE = 79;
float PROJECTILE_MORTARGRENADE_BOUNCING = 80;
float PROJECTILE_MUSKETBALL36     = 81;
float PROJECTILE_MUSKETBALL69     = 82;
float PROJECTILE_MUSKETBALL50     = 83;
float PROJECTILE_MINIEBALL        = 84;
float PROJECTILE_MINIEBALL36      = 85;
float PROJECTILE_MINIEBALL50      = 86;
float PROJECTILE_DELUGEOIL        = 87;
float PROJECTILE_DELUGEMETHANE    = 88;
float PROJECTILE_DELUGESLIME      = 89;
float PROJECTILE_DELUGECHEM       = 90;
float PROJECTILE_DELUGELAVA       = 91;
float PROJECTILE_ROSEPETALRED     = 92;
float PROJECTILE_ROSEPETALPINK    = 93;
float PROJECTILE_ROSEPETALWHITE   = 94;
float PROJECTILE_ROSEPETALBLACK   = 95;
float PROJECTILE_FEATHERBLACK     = 96;
float PROJECTILE_FEATHERWHITE     = 97;
float PROJECTILE_DELUGEFILTH      = 98;
float PROJECTILE_FIRECENTURY      = 99;
float PROJECTILE_BULLETRIFLE30    = 100;
float PROJECTILE_BULLETRIFLE30_G  = 101;
float PROJECTILE_BULLETRIFLE30_G_T = 102;
float PROJECTILE_BULLETRIFLE45    = 103;
float PROJECTILE_BULLETRIFLE45_G  = 104;
float PROJECTILE_BULLETRIFLE45_G_T = 105;


float SPECIES_HUMAN        =  0;
float SPECIES_ROBOT_SOLID  =  1;
float SPECIES_ALIEN        =  2;
float SPECIES_ANIMAL       =  3;
float SPECIES_ROBOT_RUSTY  =  4;
float SPECIES_ROBOT_SHINY  =  5;
float SPECIES_INSECT       =  6;
float SPECIES_SKELETON     =  7;
float SPECIES_STONE        =  8;
float SPECIES_TAR          =  9;
float SPECIES_FAE          = 10;
float SPECIES_RESERVED     = 15;


float SEX_EUNICH        =  -2;
float SEX_NONE          =  -1;
float SEX_UNKNOWN       =  0;
float SEX_MALE          =  1;
float SEX_FEMALE        =  2;
float SEX_HERMAPHRODITE =  3;

float SKINCOLOR_NONE = -1;
float SKINCOLOR_UNKNOWN = 0;
float SKINCOLOR_DEATHWHITE = 1;
float SKINCOLOR_WHITE = 2;
float SKINCOLOR_LIGHTYELLOW = 3;
float SKINCOLOR_YELLOW = 4;
float SKINCOLOR_REDDISH = 5;
float SKINCOLOR_ORANGEBROWN = 6;
float SKINCOLOR_LIGHTBROWN = 7;
float SKINCOLOR_BROWN = 8;
float SKINCOLOR_DARKBROWN = 9;
float SKINCOLOR_BLACK = 10;
float SKINCOLOR_GREEN = 11;
float SKINCOLOR_RED = 12;
float SKINCOLOR_BLUE = 13;
float SKINCOLOR_SILVER = 14;
float SKINCOLOR_WHITEFUR = 15;
float SKINCOLOR_BROWNFUR = 16;
float SKINCOLOR_BLACKFUR = 17;

// Deathtypes (weapon deathtypes are the IT_* constants below)
// NOTE: when adding death types, please add an explanation to Docs/spamlog.txt too.
float DEATH_SPECIAL_START = 10000;
float DEATH_FALL = 10000;
float DEATH_TELEFRAG = 10001;
float DEATH_DROWN = 10002;
float DEATH_HURTTRIGGER = 10003;
float DEATH_LAVA = 10004;
float DEATH_SLIME = 10005;
float DEATH_KILL = 10006;
float DEATH_NOAMMO = 10007;
float DEATH_SWAMP = 10008;
float DEATH_TEAMCHANGE = 10009;
float DEATH_AUTOTEAMCHANGE = 10010;
float DEATH_CAMP = 10011;
float DEATH_SHOOTING_STAR = 10012;
float DEATH_ROT = 10013;
float DEATH_MIRRORDAMAGE = 10014;
float DEATH_TOUCHEXPLODE = 10015;
float DEATH_CHEAT = 10016;
float DEATH_FIRE = 10017;
float DEATH_QUIET = 10021;
float DEATH_IMPALE = 10022;
float DEATH_CUT = 10023;

float DEATH_BATTERINGRAM = 10024;
float DEATH_CRUSH = 10025;
float DEATH_FRAGMENT = 10026;
float DEATH_HURTLASER = 10027;
float DEATH_BEATDOWN = 10028;
float DEATH_ICE = 10029;

float  DEATH_VHFIRST       = 10030;
float  DEATH_VHCRUSH       = 10030;
float  DEATH_SBMINIGUN     = 10031;
float  DEATH_SBROCKET      = 10032;
float  DEATH_SBBLOWUP      = 10033;
float  DEATH_WAKIGUN       = 10034;
float  DEATH_WAKIROCKET    = 10035;
float  DEATH_WAKIBLOWUP    = 10036;
float  DEATH_RAPTOR_CANNON = 10037;
float  DEATH_RAPTOR_BOMB   = 10038;
float  DEATH_RAPTOR_BOMB_SPLIT = 10039;
float  DEATH_RAPTOR_DEATH   = 10040;
float  DEATH_BUMB_GUN       = 10041;
float  DEATH_BUMB_RAY       = 10042;
float  DEATH_BUMB_RAY_HEAL  = 10043;
float  DEATH_BUMB_DEATH     = 10044;
float  DEATH_SPORTSTERGUN   = 10045;
float  DEATH_SPORTSTERGUNHV = 10046;
float  DEATH_SPORTSTERGUNLT = 10047;
float  DEATH_VHLAST         = 10047;
#define DEATH_ISVEHICLE(t)  ((t) >= DEATH_VHFIRST && (t) <= DEATH_VHLAST)

float DEATH_GRENADE = 10048;
float DEATH_HOLYBOLT = 10049;
float DEATH_GENERIC = 10050;

float DEATH_WEAPON = 10100;

float DEATH_CUSTOM = 10300;

float DEATH_TURRET                  = 10500;
float DEATH_TURRET_EWHEEL           = 10501;
float DEATH_TURRET_FLAC             = 10502;
float DEATH_TURRET_MACHINEGUN       = 10503;
float DEATH_TURRET_WALKER_GUN       = 10504;
float DEATH_TURRET_WALKER_MEELE     = 10505;
float DEATH_TURRET_WALKER_ROCKET    = 10506;
float DEATH_TURRET_HELLION          = 10507;
float DEATH_TURRET_HK               = 10508;
float DEATH_TURRET_MLRS             = 10509;
float DEATH_TURRET_PLASMA           = 10510;
float DEATH_TURRET_PHASER           = 10511;
float DEATH_TURRET_TESLA            = 10512;
float DEATH_TURRET_AUTOSHLAC        = 10513;
float DEATH_TURRET_LAST            = 10513;

// Monster death types
float DEATH_MONSTER                        = 10514;
float DEATH_MONSTER_DEMON_MELEE            = 10515;
float DEATH_MONSTER_DEMON_JUMP             = 10516;
float DEATH_MONSTER_SHAMBLER_MELEE         = 10517;
float DEATH_MONSTER_SHAMBLER_CLAW          = 10518;
float DEATH_MONSTER_SHAMBLER_LIGHTNING     = 10519;
float DEATH_MONSTER_SOLDIER_NAIL           = 10520;
float DEATH_MONSTER_ENFORCER_NAIL          = 10521;
float DEATH_MONSTER_DOG_BITE               = 10522;
float DEATH_MONSTER_DOG_JUMP               = 10523;
float DEATH_MONSTER_TARBABY_BLOWUP         = 10524;
float DEATH_MONSTER_FISH_BITE              = 10525;
float DEATH_MONSTER_HELLFISH_BITE          = 10526;
float DEATH_MONSTER_SHALRATH_MELEE         = 10527;
float DEATH_MONSTER_OGRE_CHAINSAW          = 10528;
float DEATH_MONSTER_OGRE_NAIL              = 10529;
float DEATH_MONSTER_MELEE                  = 10530;
float DEATH_MONSTER_ZOMBIE                 = 10531;
float DEATH_MONSTER_HELLKNIGHT_FIREBALL	   = 10532;
float DEATH_MONSTER_LAST                   = 10532;

float DEATH_WEAPONMASK = 0xFF;
float DEATH_HITTYPEMASK = 0x1F00; // which is WAY below 10000 used for normal deaths
float HITTYPE_SECONDARY = 0x100;
float HITTYPE_SPLASH = 0x200; // automatically set by RadiusDamage
float HITTYPE_BOUNCE = 0x400;
float HITTYPE_HEADSHOT = 0x800; // automatically set by Damage (if headshotbonus is set)
float HITTYPE_CORESHOT = 0x1000; // 
//float HITTYPE_RESERVED = 0x1000; // unused yet

// macros to access these
#define DEATH_ISTURRET(t)            ((t) >= DEATH_TURRET && (t) <= DEATH_TURRET_LAST)
#define DEATH_ISSPECIAL(t)            ((t) >= DEATH_SPECIAL_START)
#define DEATH_WEAPONOFWEAPONDEATH(t)  ((t) & DEATH_WEAPONMASK)
#define DEATH_ISWEAPON(t,w)           (!DEATH_ISSPECIAL(t) && DEATH_WEAPONOFWEAPONDEATH(t) == (w))
#define DEATH_WEAPONOF(t)             (DEATH_ISSPECIAL(t) ? 0 : DEATH_WEAPONOFWEAPONDEATH(t))
#define WEP_VALID(w)                  ((w) >= WEP_FIRST && (w) <= WEP_LAST)

#define DEATH_ISMONSTER(t)            ((t) >= DEATH_MONSTER && (t) <= DEATH_MONSTER_LAST)

#define FRAGS_PLAYER 0
#define FRAGS_SPECTATOR -666
#define FRAGS_LMS_LOSER -616
#define FRAGS_PLAYER_NONSOLID -616
// we can use this frags value for both

// water levels
float WATERLEVEL_NONE = 0;
float WATERLEVEL_WETFEET = 1;
float WATERLEVEL_SWIMMING = 2;
float WATERLEVEL_SUBMERGED = 3;

float MAX_SHOT_DISTANCE = 32768;

//centerprint ID list
float CPID_TEAMCHANGE = 1;
float CPID_CTF_CAPTURESHIELD = 2;
float CPID_MINSTA_FINDAMMO = 3;
float CPID_NIX_WPNCHANGE = 4;
float CPID_DISCONNECT_IDLING = 5;
float CPID_ROUND_STARTING = 6;
float CPID_GAME_STARTING = 7;
float CPID_TIMEOUT_COUNTDOWN = 8;
float CPID_MOTD = 9;
float CPID_KH_MSG = 10;
float CPID_PREVENT_JOIN = 11;

// CSQC centerprint/notify message types
float MSG_SUICIDE = 0;
float MSG_KILL = 1;
float MSG_SPREE = 2;
float MSG_KILL_ACTION = 3;
float MSG_KILL_ACTION_SPREE = 4;
float MSG_INFO = 5;
float MSG_KA = 6;
float MSG_RACE = 10;

float KILL_TEAM_RED = 12001;
float KILL_TEAM_BLUE = 12002;
float KILL_TEAM_SPREE = 12003;
float KILL_FIRST_BLOOD = 12004;
float KILL_FIRST_VICTIM = 12005;
float KILL_TYPEFRAG = 12006;
float KILL_TYPEFRAGGED = 12007;
float KILL_FRAG = 12008;
float KILL_FRAGGED = 12009;
float KILL_SPREE = 12010;
float KILL_END_SPREE = 12011;
float KILL_SPREE_3 = 12012;
float KILL_SPREE_5 = 12013;
float KILL_SPREE_10 = 12014;
float KILL_SPREE_15 = 12015;
float KILL_SPREE_20 = 12016;
float KILL_SPREE_25 = 12017;
float KILL_SPREE_30 = 12018;

float INFO_GOTFLAG = 13001;
float INFO_PICKUPFLAG = 13002;
float INFO_LOSTFLAG = 13003;
float INFO_RETURNFLAG = 13004;
float INFO_CAPTUREFLAG = 13005;

float KA_PICKUPBALL = 14001;
float KA_DROPBALL = 14002;

float RACE_SERVER_RECORD = 15001;
float RACE_NEW_TIME = 15002;
float RACE_NEW_RANK = 15003;
float RACE_FAIL = 15004;

// weapon requests
float WR_SETUP		= 1; // (SVQC) setup weapon data
float WR_THINK		= 2; // (SVQC) logic to run every frame
float WR_CHECKAMMO1	= 3; // (SVQC) checks ammo for weapon
float WR_CHECKAMMO2	= 4; // (SVQC) checks ammo for weapon
float WR_AIM		= 5; // (SVQC) runs bot aiming code for this weapon
float WR_PRECACHE	= 6; // (CSQC and SVQC) precaches models/sounds used by this weapon
float WR_SUICIDEMESSAGE = 7; // (CSQC) sets w_deathtypestring or leaves it alone (and may inspect w_deathtype for details)
float WR_KILLMESSAGE    = 8; // (CSQC) sets w_deathtypestring or leaves it alone
float WR_RELOAD         = 9; // (SVQC) does not need to do anything
float WR_RESETPLAYER    = 10; // (SVQC) does not need to do anything
float WR_IMPACTEFFECT	= 11; // (CSQC) impact effect
float WR_SWITCHABLE	= 12; // (CSQC) impact effect
float WR_PLAYERDEATH    = 13; // (SVQC) does not need to do anything
float WR_GONETHINK	= 14; // (SVQC) logic to run every frame, also if no longer having the weapon as long as the switch away has not been performed
float WR_DROP		= 15; // (SVQC) logic to run when dropping weapon
float WR_CLIPSETUP	= 16; // (SVQC) logic to run when setting up clip for extended mag weapons

float HUD_PANEL_WEAPONS		= 0;
float HUD_PANEL_AMMO		= 1;
float HUD_PANEL_POWERUPS	= 2;
float HUD_PANEL_HEALTHARMOR	= 3;
float HUD_PANEL_NOTIFY		= 4;
float HUD_PANEL_TIMER		= 5;
float HUD_PANEL_RADAR		= 6;
float HUD_PANEL_SCORE		= 7;
float HUD_PANEL_RACETIMER	= 8;
float HUD_PANEL_VOTE		= 9;
float HUD_PANEL_MODICONS	= 10;
float HUD_PANEL_PRESSEDKEYS	= 11;
float HUD_PANEL_CHAT		= 12;
float HUD_PANEL_ENGINEINFO	= 13;
float HUD_PANEL_INFOMESSAGES	= 14;
float HUD_PANEL_PHYSICS	= 15;
float HUD_PANEL_CENTERPRINT	= 16;
float HUD_PANEL_NUM		= 17; // always last panel id + 1, please increment when adding a new panel

string HUD_PANELNAME_WEAPONS 		= "weapons";
string HUD_PANELNAME_AMMO	 	= "ammo";
string HUD_PANELNAME_POWERUPS	 	= "powerups";
string HUD_PANELNAME_HEALTHARMOR 	= "healtharmor";
string HUD_PANELNAME_NOTIFY	 	= "notify";
string HUD_PANELNAME_TIMER	 	= "timer";
string HUD_PANELNAME_RADAR	 	= "radar";
string HUD_PANELNAME_SCORE	 	= "score";
string HUD_PANELNAME_RACETIMER	 	= "racetimer";
string HUD_PANELNAME_VOTE	 	= "vote";
string HUD_PANELNAME_MODICONS	 	= "modicons";
string HUD_PANELNAME_PRESSEDKEYS 	= "pressedkeys";
string HUD_PANELNAME_CHAT	 	= "chat";
string HUD_PANELNAME_ENGINEINFO	 	= "engineinfo";
string HUD_PANELNAME_INFOMESSAGES	= "infomessages";
string HUD_PANELNAME_PHYSICS	= "physics";
string HUD_PANELNAME_CENTERPRINT	= "centerprint";

#define SERVERFLAG_ALLOW_FULLBRIGHT 1
#define SERVERFLAG_TEAMPLAY 2
#define SERVERFLAG_PLAYERSTATS 4

// FIXME/EXPLAINME: why?
noref var vector autocvar_sv_player_maxs = '16 16 45';
noref var vector autocvar_sv_player_mins = '-16 -16 -24';
noref var vector autocvar_sv_player_viewoffset = '0 0 20';
noref var vector autocvar_sv_player_crouch_maxs = '16 16 25';
noref var vector autocvar_sv_player_crouch_mins = '-16 -16 -24';
noref var vector autocvar_sv_player_crouch_viewoffset = '0 0 20';
noref var vector autocvar_sv_player_headsize = '24 24 12';
noref var vector autocvar_sv_player_coresize = '13 13 8';
noref var float autocvar_sv_player_necklength = 3;

#define PL_VIEW_OFS autocvar_sv_player_viewoffset
#define PL_MIN autocvar_sv_player_mins
#define PL_MAX autocvar_sv_player_maxs
#define PL_CROUCH_VIEW_OFS autocvar_sv_player_crouch_viewoffset
#define PL_CROUCH_MIN autocvar_sv_player_crouch_mins
#define PL_CROUCH_MAX autocvar_sv_player_crouch_maxs
#define PL_HEAD autocvar_sv_player_headsize
#define PL_CORE autocvar_sv_player_coresize

// helpers
#define PL_VIEW_OFS_z autocvar_sv_player_viewoffset_z
#define PL_MIN_z autocvar_sv_player_mins_z
#define PL_MAX_z autocvar_sv_player_maxs_z
#define PL_CROUCH_VIEW_OFS_z autocvar_sv_player_crouch_viewoffset_z
#define PL_CROUCH_MIN_z autocvar_sv_player_mins_z
#define PL_HEAD_x autocvar_sv_player_headsize_x
#define PL_HEAD_y autocvar_sv_player_headsize_y
#define PL_HEAD_z autocvar_sv_player_headsize_z
#define PL_CORE_x autocvar_sv_player_coresize_x
#define PL_CORE_y autocvar_sv_player_coresize_y
#define PL_CORE_z autocvar_sv_player_coresize_z

// spawnpoint prios
#define SPAWN_PRIO_NEAR_TEAMMATE_FOUND    200
#define SPAWN_PRIO_NEAR_TEAMMATE_SAMETEAM 100
#define SPAWN_PRIO_RACE_PREVIOUS_SPAWN     50
#define SPAWN_PRIO_GOOD_DISTANCE           10

// URI handles
#define URI_GET_DISCARD              0
#define URI_GET_IPBAN                1
#define URI_GET_IPBAN_END           16
#define URI_GET_CURL                17
#define URI_GET_CURL_END            32
#define URI_GET_UPDATENOTIFICATION  33
#define URI_GET_URLLIB             128
#define URI_GET_URLLIB_END         191

// Value of various inventory items
#define VALUE_COIN_TIN		0.0001
#define VALUE_COIN_IRON		0.001
#define VALUE_COIN_BRONZE	0.01
#define VALUE_COIN_COPPER	0.1
#define VALUE_COIN_SILVER	1
#define VALUE_COIN_GOLD		10
#define VALUE_COIN_PLAT		50
#define VALUE_COIN_JADE		5000
#define VALUE_COIN_AMBERIUM	500000

#define VALUE_GEM_DIAMOND	400
#define VALUE_GEM_JACINTH	192
#define VALUE_GEM_RUBY		200
#define VALUE_GEM_PERIDOT	80
#define VALUE_GEM_EMERALD	160
#define VALUE_GEM_TOPAZ		86
#define VALUE_GEM_SAPPHIRE	185
#define VALUE_GEM_CHALCEDONY	20
#define VALUE_GEM_AGATE		30
#define VALUE_GEM_ONYX		55
#define VALUE_GEM_AMETHYST	126
#define VALUE_GEM_CHRYSOBERYL	60
#define VALUE_GEM_AQUAMARINE	70
#define VALUE_GEM_TOURMALINE	46
#define VALUE_GEM_QUARTZ	26
#define VALUE_GEM_PEARL		50
#define VALUE_GEM_BLACKPEARL	100
#define VALUE_GEM_MITHRIL	800

//Colored glass
#define VALUE_GEM_GLASS_R	0.0008
#define VALUE_GEM_GLASS_G	0.0007
#define VALUE_GEM_GLASS_B	0.0006
#define VALUE_GEM_GLASS_Y	0.0002
#define VALUE_GEM_GLASS_W	0.0004

//Faux (counterfeit coins)
#define VALUE_COIN_F_TIN	0.00001
#define VALUE_COIN_F_IRON	0.00001
#define VALUE_COIN_F_BRONZE	0.00001
#define VALUE_COIN_F_COPPER	0.00001
#define VALUE_COIN_F_SILVER	0.00001
#define VALUE_COIN_F_GOLD	0.00001
#define VALUE_COIN_F_PLAT	0.00001
#define VALUE_COIN_F_JADE	0.00001
#define VALUE_COIN_F_AMBERIUM	0.00001

#define VALUE_GEM_F_DIAMOND	0.005
#define VALUE_GEM_F_JACINTH	0.005
#define VALUE_GEM_F_RUBY	0.0005
#define VALUE_GEM_F_PERIDOT	0.005
#define VALUE_GEM_F_EMERALD	0.0005
#define VALUE_GEM_F_TOPAZ	0.0005
#define VALUE_GEM_F_SAPPHIRE	0.0005
#define VALUE_GEM_F_CHALCEDONY	0.0005
#define VALUE_GEM_F_AGATE	0.0005
#define VALUE_GEM_F_ONYX	0.0005
#define VALUE_GEM_F_AMETHYST	0.005
#define VALUE_GEM_F_CHRYSOBERYL	0.0005
#define VALUE_GEM_F_AQUAMARINE	0.005
#define VALUE_GEM_F_TOURMALINE	0.0005
#define VALUE_GEM_F_PEARL	0.0005
#define VALUE_GEM_F_BLACKPEARL	0.0005
#define VALUE_GEM_F_MITHRIL	0.0005


// this sets values for the g_replace_weapon_pickups
#define GREPLACEWEAPONPICKUPS_SPIKES 1
#define S_GREPLACEWEAPONPICKUPS_SPIKES "1"

#define GREPLACEWEAPONPICKUPS_FIRE 2
#define S_GREPLACEWEAPONPICKUPS_FIRE "2"

#define GREPLACEWEAPONPICKUPS_PILLAR_OF_FIRE 3
#define S_GREPLACEWEAPONPICKUPS_PILLAR_OF_FIRE "3"

#define GREPLACEWEAPONPICKUPS_JUMPPADS 4
#define S_GREPLACEWEAPONPICKUPS_JUMPPADS "4"

#define GREPLACEWEAPONPICKUPS_BUMPERS 5
#define S_GREPLACEWEAPONPICKUPS_BUMPERS "5"

#define GREPLACEWEAPONPICKUPS_BALOONS 6
#define S_GREPLACEWEAPONPICKUPS_BALOONS "6"

#define GREPLACEWEAPONPICKUPS_TANKTRAPS 7
#define S_GREPLACEWEAPONPICKUPS_TANKTRAPS "7"

#define GREPLACEWEAPONPICKUPS_ABDBLDGS 8
#define S_GREPLACEWEAPONPICKUPS_ABDBLDGS "8"

#define GREPLACEWEAPONPICKUPS_FOLIAGE 9
#define S_GREPLACEWEAPONPICKUPS_FOLIAGE "9"

#define GREPLACEWEAPONPICKUPS_STDXONWPNS 10
#define S_GREPLACEWEAPONPICKUPS_STDXONWPNS "10"

#define GREPLACEWEAPONPICKUPS_ENRGYWPNS 11
#define S_GREPLACEWEAPONPICKUPS_ENRGYWPNS "11"

#define GREPLACEWEAPONPICKUPS_EXPLSVWPNS 12
#define S_GREPLACEWEAPONPICKUPS_EXPLSVWPNS "12"

#define GREPLACEWEAPONPICKUPS_MODGUNCIVILWPNS 13
#define S_GREPLACEWEAPONPICKUPS_MODGUNCIVILWPNS "13"

#define GREPLACEWEAPONPICKUPS_MODGUNWPNS 14
#define S_GREPLACEWEAPONPICKUPS_MODGUNWPNS "14"

#define GREPLACEWEAPONPICKUPS_MODTOOLS 15
#define S_GREPLACEWEAPONPICKUPS_MODTOOLS "15"

#define GREPLACEWEAPONPICKUPS_GUNXPLSVENRGYWPNS 16
#define S_GREPLACEWEAPONPICKUPS_GUNXPLSVENRGYWPNS "16"

#define GREPLACEWEAPONPICKUPS_WWIWPNS 17
#define S_GREPLACEWEAPONPICKUPS_WWIWPNS "17"

#define GREPLACEWEAPONPICKUPS_OLDWESTWPNS 18
#define S_GREPLACEWEAPONPICKUPS_OLDWESTWPNS "18"

#define GREPLACEWEAPONPICKUPS_SCROLLS 19
#define S_GREPLACEWEAPONPICKUPS_SCROLLS "19"

#define GREPLACEWEAPONPICKUPS_MDVL_WPNS 20
#define S_GREPLACEWEAPONPICKUPS_MDVL_WPNS "20"

#define GREPLACEWEAPONPICKUPS_MDVL_WPNS_SCROLLS 21
#define S_GREPLACEWEAPONPICKUPS_MDVL_WPNS_SCROLLS "21"


