.float sprite_height;

.void()		attack_melee;
.float()	attack_ranged;
.float() 	checkattack;

entity(entity ent) FindTarget;

.float spawner_monstercount;

.float monster_respawned; // used to make sure we're not recounting respawned monster stats

float monsters_spawned;

//Note: The below MONSTER..._.... are spawnflag bits. (Thus they must not conflict)
const float MONSTERFLAG_NORESPAWN = 2;
const float MONSTERFLAG_MINIBOSS = 64;  // monster spawns as mini-boss (also has a chance of naturally becoming one)
const float MONSTERFLAG_NOWANDER = 128; // disable wandering around (currently unused)
//
const float MONSTERSKILL_NOTEASY = 256; // monster will not spawn on skill <= 2
const float MONSTERSKILL_NOTMEDIUM = 512; // monster will not spawn on skill 3
const float MONSTERSKILL_NOTHARD = 1024; // monster will not spawn on skill 4
const float MONSTERSKILL_NOTINSANE = 2048; // monster will not spawn on skill 5
const float MONSTERSKILL_NOTNIGHTMARE = 4096; // monster will not spawn on skill >= 6
//
const float MONSTERFLAG_SPAWNED = 8192; // flag for spawned monsters  //Was 1024, but this conflicted with original Q1 spawnflags Above
const float MONSTERFLAG_APPEAR = 16384; // delay spawn until triggered //Was 256, but this conflicted with original Q1 spawnflags Above
const float MONSTERFLAG_GIANT = 32768; // experimental giant monsters feature //Was 512, but this conflicted with original Q1 spawnflags Above

.void() monster_spawnfunc;
.void() monster_die;
.void() monster_delayedattack;

.float monster_moveflags; // checks where to move when not attacking (currently unused)
const float MONSTER_MOVE_OWNER = 1; // monster will move to owner if in range, or stand still
const float MONSTER_MOVE_WANDER = 2; // monster will ignore owner & wander around
const float MONSTER_MOVE_SPAWNLOC = 3; // monster will move to its spawn location when not attacking
const float MONSTER_MOVE_NOMOVE = 4; // monster simply stands still

float enemy_range () { return vlen(self.enemy.origin - self.origin); }

float MONSTER_STATE_ATTACK_LEAP = 1; // the start of something big?


//smells that are perm for the monster
.float monster_smell_acrid; //Like chemically
.float monster_smell_alcohol;
.float monster_smell_bodyodor;
.float monster_smell_cheeze;
.float monster_smell_earthy;
.float monster_smell_faeces;
.float monster_smell_garlic;
.float monster_smell_urine;
.float monster_smell_roses;
.float monster_smell_rottingflesh;


.float monster_hasheightenedsenseofsmell;
.float monster_painsoundset;
